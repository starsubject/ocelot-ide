/* =============================
   1) BASE & LAYOUT STYLES
   ============================= */
   html, body {
    margin: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
  }
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f9f9f9;
    color: #333;
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
  #app-container {
    display: flex;
    flex: 1;
    flex-direction: row;
    gap: 10px;
    padding: 10px;
    height: 100vh; 
    overflow: hidden;
    flex-wrap: nowrap;
  }
  
  /* =============================
     2) LEFT (Toolbox), MIDDLE (Workspace), RIGHT (Canvas)
     ============================= */
  #block-menu {
    flex: 1;
    display: flex;
    flex-direction: column;
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #f4f4f4;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
    padding: 10px;
    overflow-y: auto;  
    min-width: 150px; 
  }
  #block-menu h3 {
    margin-top: 0; 
    text-align: center;
    border-bottom: 2px solid rgba(0,0,0,0.1);
    padding-bottom: 5px;
  }
  
  #workspace-container {
    flex: 2;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #f4f4f4;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
    padding: 10px;
    min-width: 300px;
  }
  #workspace-container h3 {
    margin-top: 0; 
    text-align: center;
    border-bottom: 2px solid rgba(0,0,0,0.1);
    padding-bottom: 5px;
    width: 100%;
  }
  #workspace {
    flex: 1; 
    width: 100%;
    margin-bottom: 10px;
    border: 2px solid #000;
    background: #f4f4f4;
    border-radius: 8px;
    overflow-y: auto;
  }
  .run-button {
    margin-bottom: 10px;
  }
  
  /* Resizable code area */
  #generated-code {
    width: 100%;
    min-height: 120px;
    resize: vertical;
    overflow: auto;
    align-self: flex-start;
    border: 2px solid black;
    padding: 5px;
    font-size: 12px;
    background: #eee;
    border-radius: 8px;
  }
  
  #canvas-container {
    flex: 3;
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #f4f4f4;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
    padding: 10px;
    min-width: 400px; 
    overflow: hidden;
  }
  #canvas-container h3 {
    margin-top: 0; 
    text-align: center;
    border-bottom: 2px solid rgba(0,0,0,0.1);
    padding-bottom: 5px;
    width: 100%;
  }
  #graphics-canvas {
    display: block;
    background: white;
    border: 2px solid black;
    width: 640px;
    height: 360px;
    border-radius: 5px;
  }
  
  /* =============================
     3) STACK BLOCKS (non-C-block)
     Using scratchblocks.svg as background
     ============================= */
  
  /* Both toolbox .block and workspace .workspace-block 
     get the same puzzle background. */
  .block,
  .workspace-block {
    /* Basic display & spacing */
    position: relative;
    margin: 5px;
    /* We'll use flex so we can easily center text. */
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: grab;
    user-select: none;
    box-shadow: 2px 2px 6px rgba(0,0,0,0.2);
  
    /* 
       This is the key:
       1) aspect-ratio ensures the shape is correct. 
       2) min-width/min-height so the block won't shrink too tiny.
       3) background-size: contain so the puzzle shape fits inside the box.
    */
    aspect-ratio: 3 / 1;      /* Example ratio. Adjust to match scratchblocks.svg */
    min-width: 150px;         /* can tweak these to fit your puzzle shape */
    min-height: 50px;
    
    background: url("scratchblocks.svg") no-repeat center center;
    background-size: contain; /* scale puzzle to fill container */
  
    /* 
      If you prefer a fixed size, comment out aspect-ratio 
      and min-width, then define width & height explicitly:
      width: 300px;
      height: 100px;
    */
  }
  
  /* The text inside the puzzle block: 
     Usually you'd do:
       <div class="workspace-block">
         <span>Move 10 Steps</span>
       </div>
     We'll center it with flex's justify-content / align-items. 
     So no extra absolute positioning needed.
  */
  .block > span,
  .workspace-block > span {
    color: #fff;
    font-weight: bold;
    font-size: 14px;
    pointer-events: none;
    white-space: nowrap;
  }
  
  /* 
     If you want a slight color filter difference for .block 
     vs .workspace-block, you could do:
     .block {
       filter: hue-rotate(20deg);
     }
  */
  
  /* =============================
     4) C-BLOCKS (repeat, forever)
     ============================= */
  .c-block {
    background-color: #ffcc00;
    padding: 12px;
    margin: 5px;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    position: relative;
    font-size: 16px;
    font-weight: bold;
    box-shadow: 2px 2px 5px rgba(0,0,0,0.1);
  
    /* If you want a min-width so it won't collapse */
    min-width: 200px;
  }
  .c-block .inner {
    min-height: 50px;
    width: 90%;
    background: #fff;
    margin: 8px 0;
    padding: 8px;
    border: 2px dashed gray;
    border-radius: 5px;
  }
  
  /* =============================
     5) OTHER INPUTS AND BUTTONS
     ============================= */
  .input-field {
    background: #ffffff;
    border: 2px solid #ccc;
    padding: 6px 8px;
    margin: 0 5px;
    width: 60px;
    text-align: center;
    font-size: 14px;
    border-radius: 6px;
    font-weight: bold;
    color: #333;
    transition: 0.2s;
  }
  .input-field:focus {
    border-color: #5a99ff;
    box-shadow: 0 0 4px rgba(90,153,255,0.5);
    outline: none;
  }
  
  /* Delete Button inside workspace blocks */
  .delete-button {
    margin-left: auto;
    background: #ff4d4d;
    color: white;
    border: none;
    padding: 7px;
    cursor: pointer;
    font-size: 12px;
    border-radius: 5px;
    transition: 0.2s;
  }
  .delete-button:hover {
    background-color: #cc0000;
  }
  
  /* Additional Buttons (Run, Clean, etc.) */
  .run-button, .clean-button, .upload-button {
    padding: 12px 18px;
    font-size: 16px;
    border: none;
    cursor: pointer;
    border-radius: 6px;
    transition: 0.2s;
    font-weight: bold;
    margin-bottom: 10px;
  }
  .run-button {
    background-color: #4CAF50;
    color: white;
  }
  .run-button:hover {
    background-color: #388E3C;
  }
  .clean-button {
    background-color: #FF9800;
    color: white;
  }
  .clean-button:hover {
    background-color: #E65100;
  }
  .upload-button {
    background-color: #2196F3;
    color: white;
  }
  .upload-button:hover {
    background-color: #0b7dda;
  }
  
  /* Highlighting for error blocks */
  .error-highlight {
    animation: errorFlash 0.5s alternate 3;
  }
  @keyframes errorFlash {
    from { background-color: inherit; }
    to   { background-color: red; }
  }

  /* =============================
   COSTUME MANAGER MODAL STYLES
   ============================= */

/* This overlay covers the entire screen. */
#costume-manager {
    position: fixed;
    top: 0;
    left: 0;
    z-index: 9999; /* appear above everything else */
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5); /* semi-transparent black */
    
    /* If you want it hidden by default, you can add the .hidden class in your HTML. */
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* The .hidden class can be toggled on/off via JS. */
  #costume-manager.hidden {
    display: none;
  }
  
  /* The main white panel in the center */
  #costume-manager .manager-content {
    background-color: #fefefe;
    width: 500px;
    max-width: 90%;
    max-height: 80%;
    padding: 20px;
    border: 2px solid #888;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    position: relative; /* For the close button if you want to position it absolutely */
    overflow: hidden;   /* Just in case, so large content can scroll inside */
    display: flex;
    flex-direction: column; /* Let children stack vertically */
  }
  
  /* Title or header inside the manager (if any) */
  #costume-manager h2 {
    margin-top: 0;
    text-align: center;
    border-bottom: 2px solid #ccc;
    padding-bottom: 10px;
    margin-bottom: 20px;
  }
  
  /* The list of costumes (thumbnails) goes here */
  #costume-list {
    flex: 1; /* fill available space in manager-content */
    display: flex;
    flex-wrap: wrap; /* allow multiple images per row */
    gap: 10px;       /* spacing between items */
    overflow-y: auto; /* scroll if too many costumes */
    justify-content: center; 
    margin-bottom: 20px;
    /* You can also add a background or border if you like */
  }
  
  /* Each costume thumbnail wrapper */
  .costume-item {
    position: relative;
    display: inline-block;
    border: 1px solid #ddd;
    border-radius: 5px;
    overflow: hidden; /* so if the image is big, it’s clipped */
    background: #fff;
    cursor: default; /* by default not clickable, unless in picking mode */
  }
  
  /* The image itself */
  .costume-item img {
    display: block;
    width: 100px;  /* or whatever size you like */
    height: auto;
  }
  
  /* If in picking mode, we change the cursor to pointer in JS,
     but you can also do it here if isPickerMode sets some class, e.g. .picking-mode .costume-item { cursor: pointer; } */
  
  /* The "Delete (X)" button in the top-right corner of each thumbnail */
  .delete-costume-btn {
    position: absolute;
    top: 0;
    right: 0;
    background: red;
    color: white;
    border: none;
    width: 20px;
    height: 20px;
    font-size: 14px;
    font-weight: bold;
    cursor: pointer;
    border-radius: 0 0 0 5px; /* slight rounding to match the corner */
    opacity: 0.8;
    transition: 0.2s;
  }
  .delete-costume-btn:hover {
    opacity: 1;
    background: darkred;
  }
  
  /* The “Close” button at the bottom or top inside manager-content (if present) */
  #close-costume-btn {
    align-self: flex-end; /* push it to the right in the manager-content */
    padding: 8px 16px;
    margin-top: 10px;
    background: #555;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
  }
  #close-costume-btn:hover {
    background-color: #333;
  }
  
  /* The “Add Costume” button in manager (If you want to style it similarly) */
  #add-costume-btn {
    padding: 8px 16px;
    margin-right: auto; /* push it to the left if on same row as close-costume-btn */
    background: #2196F3;
    color: #fff;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-bottom: 10px;
  }
  #add-costume-btn:hover {
    background-color: #0b7dda;
  }