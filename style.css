/* =============================
   1) BASE & LAYOUT STYLES
   ============================= */
   html, body {
    margin: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
  }
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f9f9f9;
    color: #333;
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
  #app-container {
    display: flex;
    flex: 1;
    flex-direction: row;
    gap: 10px;
    padding: 10px;
    height: 100vh; 
    overflow: hidden;
    flex-wrap: nowrap;
  }
  
  /* =============================
     2) LEFT (Toolbox), MIDDLE (Workspace), RIGHT (Canvas)
     ============================= */
  #block-menu {
    flex: 1;
    display: flex;
    flex-direction: column;
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #f4f4f4;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
    padding: 10px;
    overflow-y: auto;  
    min-width: 150px; 
  }
  #block-menu h3 {
    margin-top: 0;
    text-align: center;
    border-bottom: 2px solid rgba(0,0,0,0.1);
    padding-bottom: 5px;
  }
  
  #workspace-container {
    flex: 2;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #f4f4f4;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
    padding: 10px;
    min-width: 300px;
  }
  #workspace-container h3 {
    margin-top: 0;
    text-align: center;
    border-bottom: 2px solid rgba(0,0,0,0.1);
    padding-bottom: 5px;
    width: 100%;
  }
  #workspace {
    flex: 1;
    width: 100%;
    margin-bottom: 10px;
    border: 2px solid #000;
    background: #f4f4f4;
    border-radius: 8px;
    overflow-y: auto;
  }
  .run-button {
    margin-bottom: 10px;
  }
  
  /* Resizable code area */
  #generated-code {
    width: 100%;
    min-height: 120px;
    resize: vertical;
    overflow: auto;
    align-self: flex-start;
    border: 2px solid black;
    padding: 5px;
    font-size: 12px;
    background: #eee;
    border-radius: 8px;
  }
  
  #canvas-container {
    flex: 3;
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 2px solid #000;
    border-radius: 10px;
    background-color: #f4f4f4;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
    padding: 10px;
    min-width: 400px;
    overflow: hidden;
  }
  #canvas-container h3 {
    margin-top: 0;
    text-align: center;
    border-bottom: 2px solid rgba(0,0,0,0.1);
    padding-bottom: 5px;
    width: 100%;
  }
  #graphics-canvas {
    display: block;
    background: white;
    border: 2px solid black;
    width: 640px;
    height: 360px;
    border-radius: 5px;
  }
  
  /* =============================
     3) BLOCKS & DRAGGABLE ITEMS
     ============================= */
  
  /* 
     For normal/stack blocks (both .block from toolbox and .workspace-block in the workspace): 
     - We use a background image referencing the puzzle shape from scratchblocks.svg
     - We'll fix a size to match that shape (e.g., 300×80).
  */
  .block,
  .workspace-block {
    position: relative;
    margin: 5px;
    display: inline-block; /* so multiple blocks can line up */
    user-select: none;
    cursor: grab;
    /* If you want them tinted differently in the toolbox vs workspace, 
       you can keep different backgrounds or filter. 
       For now, let's keep them the same. */
  
    /* We'll define the size to match your puzzle’s aspect ratio. 
       Adjust as needed. */
    width: 300px;  
    height: 80px;
  
    /* This is the actual puzzle background from your SVG */
    background: url("scratchblocks.svg") no-repeat center center;
    /* Make it fill the 300×80 area. 
       If the SVG is a different ratio, use background-size: contain; or cover. */
    background-size: 100% 100%;
  
    /* Optionally add a small box-shadow for depth. */
    box-shadow: 2px 2px 6px rgba(0,0,0,0.2);
  }
  
  /* If you want a different color for blocks in the workspace vs toolbox: */
  .block {
    /* e.g. a hue-rotate filter or different .svg? 
       We'll skip for now. */
  }
  .workspace-block {
    /* Same puzzle shape, could be a different background if you prefer. */
  }
  
  /* 
     Overlaid label text for a block: 
     We'll assume you place a <span> inside .block or .workspace-block 
     for the block's text. Make it absolutely positioned inside the container.
  */
  .block > span,
  .workspace-block > span {
    position: absolute;
    top: 50%; 
    left: 50%;
    transform: translate(-50%, -50%);
    color: #fff;  /* or black if your SVG is light */
    font-weight: bold;
    font-size: 14px;
    white-space: nowrap;
    pointer-events: none; /* Let user drag the block, not select text */
  }
  
  /* C-Blocks (like repeat, forever) remain standard rectangles */
  .c-block {
    background-color: #ffcc00;
    padding: 12px;
    margin: 5px;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    position: relative;
    font-size: 16px;
    font-weight: bold;
    box-shadow: 2px 2px 5px rgba(0,0,0,0.1);
    min-width: 200px; /* Just to keep them wide enough to see the content */
  }
  .c-block .inner {
    min-height: 50px;
    width: 90%;
    background: #fff;
    margin: 8px 0;
    padding: 8px;
    border: 2px dashed gray;
    border-radius: 5px;
  }
  
  /* Input Fields */
  .input-field {
    background: #ffffff;
    border: 2px solid #ccc;
    padding: 6px 8px;
    margin: 0 5px;
    width: 60px;
    text-align: center;
    font-size: 14px;
    border-radius: 6px;
    font-weight: bold;
    color: #333;
    transition: 0.2s;
  }
  .input-field:focus {
    border-color: #5a99ff;
    box-shadow: 0 0 4px rgba(90,153,255,0.5);
    outline: none;
  }
  
  /* Delete Button inside workspace blocks */
  .delete-button {
    margin-left: auto;
    background: #ff4d4d;
    color: white;
    border: none;
    padding: 7px;
    cursor: pointer;
    font-size: 12px;
    border-radius: 5px;
    transition: 0.2s;
  }
  .delete-button:hover {
    background-color: #cc0000;
  }
  
  /* Additional Buttons (Run, Clean, etc.) */
  .run-button, .clean-button, .upload-button {
    padding: 12px 18px;
    font-size: 16px;
    border: none;
    cursor: pointer;
    border-radius: 6px;
    transition: 0.2s;
    font-weight: bold;
    margin-bottom: 10px;
  }
  .run-button {
    background-color: #4CAF50;
    color: white;
  }
  .run-button:hover {
    background-color: #388E3C;
  }
  .clean-button {
    background-color: #FF9800;
    color: white;
  }
  .clean-button:hover {
    background-color: #E65100;
  }
  .upload-button {
    background-color: #2196F3;
    color: white;
  }
  .upload-button:hover {
    background-color: #0b7dda;
  }
  
  /* Highlighting for error blocks */
  .error-highlight {
    animation: errorFlash 0.5s alternate 3;
  }
  @keyframes errorFlash {
    from { background-color: inherit; }
    to   { background-color: red; }
  }